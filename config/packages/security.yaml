# config/packages/security.yaml
security:
    enable_authenticator_manager: true
     # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        App\Entity\User:
            algorithm: auto
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    firewalls:
        login:
            pattern: ^/api/v1/login
            stateless: true
            json_login:
                check_path: /api/v1/login
                username_path: email
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        api:
            pattern:   ^/api/v1
            stateless: true
            jwt: ~
        
        # Routes de dev
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        # All others of the project
        main:
            lazy: true
            provider: app_user_provider

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall
            form_login:
                # "login" is the name of the route created previously
                login_path: login
                check_path: login
                default_target_path: back_user_index
                enable_csrf: true

            json_login:
                # api_login is a route we will create below
                check_path: api_v1_login

            logout:
                # "logout" is the name of the logoute route
                path: logout
                
            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    access_control:
        - { path: ^/back, roles: ROLE_ADMIN }
        - { path: ^/api/login, roles: PUBLIC_ACCESS }
        # - { path: ^/api,       roles: IS_AUTHENTICATED_FULLY }
      #  - { path: ^/api,       roles: IS_AUTHENTICATED_FULLY }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon